/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState, useEffect } from 'react';
import PropTypes from 'prop-types';
import { useAnimations } from '@react-three/drei';
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';

import { useHandleAnimation } from './useHandleAnimation';

const AnimationHandler = ({ model, fwdRef, moving, jumping }) => {
  const animations = model ? model.animations : null;

  const { actions, clips, mixer } = useAnimations(animations, fwdRef);
  useHandleAnimation(actions, clips, mixer, moving, jumping);

  return null;
};

export default function Robot({ moving, jumping, ...props }) {
  const [model, setModel] = useState(null);
  const group = useRef(null);

  useEffect(() => new GLTFLoader().load('/models/RobotExpressive.glb', setModel), []);

  return model ? (
    <>
      <AnimationHandler model={model} fwdRef={group} moving={moving} jumping={jumping} />
      {/* eslint-disable-next-line react/jsx-props-no-spreading */}
      <group ref={group} {...props} dispose={null}>
        <primitive object={model.scene} />
      </group>
    </>
  ) : null;
}

Robot.propTypes = {
  moving: PropTypes.bool,
  jumping: PropTypes.bool,
};

Robot.defaultProps = {
  moving: false,
  jumping: false,
};
